version: '3.8' #compose file version
#networks:
 # my-network:
    #driver: bridge


services:
  broker-service:
    build: 
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "10000:10000"
    #networks:
      #- my-network
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build: 
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    env_file:
      - .env
    restart: always
    #networks:
      #- my-network
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build: 
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    env_file:
      - .env
    ports:
      - "8081:8081"
    #networks:
     # - my-network
    restart: always

  listener-service:
    build: 
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    env_file:
      - .env
    ports:
      - "8082:8082"
    deploy:
      mode: replicated
      replicas: 1
    #networks:
     # - my-network
    restart: always
   
    


  database:
    image: postgres:alpine
    container_name: postgres_microservice
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASSWORD}
      - POSTGRES_DB=${DBNAME}
    ports:
      - "5432:5432"
    #networks:
      #- my-network
    volumes:
      - database_postgres:/var/lib/postgresql/data
  
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    #networks:
      #- my-network
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: ${MONGOUSERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGOPASSWORD}
    volumes:
      - database_mongo:/var/lib/mongo/data
  
  rabbitmq:
    image: 'rabbitmq:3.10-alpine'
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - rabbitmq_mq:/var/lib/rabbitmq/data

volumes:
  database_postgres:
  rabbitmq_mq:
  database_mongo:
